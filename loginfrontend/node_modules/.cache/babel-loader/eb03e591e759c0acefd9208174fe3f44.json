{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\leon\\\\Code\\\\Interview-Quiz\\\\loginfrontend\\\\src\\\\component\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { TextField, Typography, Button } from \"@material-ui/core\";\nexport default function Register({\n  register,\n  setIsLogin\n}) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n\n  const handleRegister = () => {\n    register(username, password, firstname, lastname);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      style: {\n        marginBottom: 8\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"outlined\",\n      className: \"form-input\",\n      fullwidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      variant: \"outlined\",\n      className: \"form-input\",\n      fullwidth: true,\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"First name\",\n      variant: \"outlined\",\n      className: \"form-input\",\n      fullwidth: true,\n      value: firstname,\n      onChange: e => setFirstname(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Last name\",\n      variant: \"outlined\",\n      className: \"form-input\",\n      fullwidth: true,\n      value: lastname,\n      onChange: e => setLastname(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullwidth: true,\n      size: \"large\",\n      onClick: () => handleRegister(),\n      children: \"register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"default\",\n      fullwidth: true,\n      size: \"large\",\n      onClick: () => setIsLogin(true),\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"XahbyxFEimaYgxV+L0yxptlfPPg=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/leon/Code/Interview-Quiz/loginfrontend/src/component/register.js"],"names":["useState","TextField","Typography","Button","Register","register","setIsLogin","username","setUsername","password","setPassword","firstname","setFirstname","lastname","setLastname","handleRegister","marginBottom","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { TextField, Typography, Button } from \"@material-ui/core\";\r\n\r\nexport default function Register({ register, setIsLogin }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n\r\n  const handleRegister = () => {\r\n    register(username, password, firstname, lastname);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <Typography variant=\"h5\" style={{ marginBottom: 8 }}>\r\n        Login\r\n      </Typography>\r\n      <TextField\r\n        label=\"Username\"\r\n        variant=\"outlined\"\r\n        className=\"form-input\"\r\n        fullwidth\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <br/>\r\n      <TextField\r\n        label=\"Password\"\r\n        variant=\"outlined\"\r\n        className=\"form-input\"\r\n        fullwidth\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <br/>\r\n      <TextField\r\n        label=\"First name\"\r\n        variant=\"outlined\"\r\n        className=\"form-input\"\r\n        fullwidth\r\n        value={firstname}\r\n        onChange={(e) => setFirstname(e.target.value)}\r\n      />\r\n      <br/>\r\n      <TextField\r\n        label=\"Last name\"\r\n        variant=\"outlined\"\r\n        className=\"form-input\"\r\n        fullwidth\r\n        value={lastname}\r\n        onChange={(e) => setLastname(e.target.value)}\r\n      />\r\n      <br/>\r\n      <Button variant=\"contained\" color=\"primary\" fullwidth size=\"large\" onClick={() => handleRegister()}>register</Button>\r\n      <Button variant=\"contained\" color=\"default\" fullwidth size=\"large\" onClick={() => setIsLogin(true)}>login</Button>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}